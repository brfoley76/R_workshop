?read.csv
snark=read.csv("snark.csv")
list.files
list.files()
snark=read.csv("data_files/snark.csv")
snark=read.csv("dataFiles/snark.csv")
snark=read.csv("./dataFiles/snark.csv")
getwd()
getwd()
setwd("/media/brad/Data/Documents/softwareCarp/MCBWorkshop2015/R")
snark=read.csv("./dataFiles/snark.csv")
snark=read.csv("./data_files/snark.csv")
str(snark)
snark=read.csv("./data_files/snark.csv")
str(snark)
dim(snark)
getwd()
list.files("./data_files")
dummyVector=c(4, 12, 1.3, 15, 0.1, 2.5, 7, 55)
# Exercise 5: add numbers to dummyVector. Subtract. Divide. What happens if you add a vector containing 2 numbers to dummyVector? or 3? Finally, perform a mathematical operation on dummyVector to turn all values to 1**
dummyVector+1
snark[,2]=tolower(snark[,2])
dummyVector/3
dummyVector/dummyVector
dummyVector[c(1, 3, 5)]
dummyVector[c(1, 3, 5)]+10
dummyVector[1]="G"
dummyVector
gardenia = read.csv("./data_files/gardenia.csv")
print(gardenia)
h_cm=gardenia=gardenia[,"height"]*2.54
gardenia=data.frame(gardenia, h_cm)
print(gardenia)
gardenia = read.csv("./data_files/gardenia.csv")
aaa=lm(gardenia[,2]~gardenia[1])
gardenia
str(gardenia
)
str(gardenia)
aaa=lm(gardenia[,2]~gardenia[,1])
aaa.pval
pval(aaa)
p.val(aaa)
read.csv("./data_files/gardenia.csv")
str(gardenia)
gardenia_bup=gardenia
gardenia=cbind(gardenia, h_cm)
gardenia
gardenia=data.frame(gardenia, h_cm)
gardenia
names(gardenia
)
col.names(gardenia)
colnames(gardenia)
colnames(gardenia)=c("name", "h_in", "leaf_number", "flowering_time", "h_cm")
gardenia
snark=read.table("./data_files/snark.csv", sep=",", header=T)
head(snark)
str(snark)
snark=read.table("./data_files/snark.csv", sep=",", header=T, as.is=T)
head(snark)
snark=read.csv("./data_files/snark.csv", sep=",", header=T, strip.white=T)
str(snark)
snark[,"sex..f.0."]
lower.case(snark[,"sex..f.0."])
snark=read.csv("./data_files/snark.csv")
str(snark)
lower.case(snark[,"sex..f.0."])
to.lower(snark[,"sex..f.0."])
?to.lower
?lower
?tolower
tolower(snark[,"sex..f.0."])
as.numeric(snark[,"sex..f.0."])
Now we quality check. **This is really important!** One of the first things to do is make sure all the data is formatted correctly. Try the **str** function on your data.
str(snark)
str(snark)
Sentence="Hello, I'm on loop "
for(i in 1:20){
output=paste(Sentence, i)
print(output)
}
Sentence="Hello, I'm on loop number"
for(i in 1:20){
output=paste(Sentence, i)
print(output)
}
snark[,"sex..f.0."]=tolower(snark[,"sex..f.0."])
snark[which(snark[,2]=="f"),2]=0
snark[which(snark[,2]=="female"),2]=0
snark[which(snark[,2]=="m"),2]=1
snark[which(snark[,2]=="male"),2]=1
head(snark)
str(snark)
ind=c(1:nrow(snark))
snark2=cbind(snark[,1:3], ind, snark[4:length(snark)])
mean(snark2[,c(4:8)])
mean(snark2[,c(4:8)], na.rm=T)
mean(snark[,c(4:8)], na.rm=T)
head(snark2)
mean(snark[,5], na.rm=T)
mean(snark[,5:10], na.rm=T)
colVec=c()
for(i in 1:5){
day=i*3-2
var1=paste("l_", day, sep="")
var2=paste("w_", day, sep="")
var3=paste("a_", day, sep="")
var4=paste("bod_", day, sep="")
colVec=c(colVec, var1, var2, var3, var4)
}
colVec
colVec=c("pop", "sex", "fam", "id", colVec)
colnames(snark2)
colnames(snark2)=colVec
max(snark[,"bod_14"], na.rm=T)
max(snark[,"bod_13"], na.rm=T)
snark=snark2
max(snark[,"bod_13"], na.rm=T)
min(snark[,"bod_13"], na.rm=T)
hist(snark[,"bod_13"], na.rm=T)
hist(snark[,"bod_13"])
hist(snark[,"bod_13"])
hist(log(snark[,"bod_13"]))
exp(7)
med(snark[,"bod_13"])
median(snark[,"bod_13"])
median(snark[,"bod_13"], na.rm=T)
mean(snark[,"bod_13"], na.rm=T)
boxplot(snark[,"bod_13"]~snark[,"sex"]+snark[,"pop"])
snark[,"sex"]=as.character(snark[,"sex"])
boxplot(snark[,"bod_13"]~snark[,"sex"]+snark[,"pop"])
str(snark)
unique(snark[,"sex"])
snark[which(snark[,2]=="f"),2]=0
snark[which(snark[,2]=="female"),2]=0
snark[which(snark[,2]=="m"),2]=1
snark[which(snark[,2]=="male"),2]=1
unique(snark[,"sex"])
snark=read.csv("./data_files/snark.csv", sep=",", header=T, strip.white=T)
str(snark)
unique(snark[,2])
snark[,"sex..f.0."]=tolower(snark[,"sex..f.0."])
#as.numeric(snark[,"sex..f.0."])
snark[which(snark[,2]=="f"),2]=0
snark[which(snark[,2]=="female"),2]=0
snark[which(snark[,2]=="m"),2]=1
snark[which(snark[,2]=="male"),2]=1
unique(snark[,"sex"])
unique(snark[,2])
ind=c(1:nrow(snark))
snark2=cbind(snark[,1:3], ind, snark[4:length(snark)])
colVec=c()
for(i in 1:5){
day=i*3-2
var1=paste("l_", day, sep="")
var2=paste("w_", day, sep="")
var3=paste("a_", day, sep="")
var4=paste("bod_", day, sep="")
colVec=c(colVec, var1, var2, var3, var4)
}
colVec
colVec=c("pop", "sex", "fam", "id", colVec)
colnames(snark)
colnames(snark)=colVec
colVec=c()
for(i in 1:5){
day=i*3-2
var1=paste("l_", day, sep="")
var2=paste("w_", day, sep="")
var3=paste("a_", day, sep="")
var4=paste("bod_", day, sep="")
colVec=c(colVec, var1, var2, var3, var4)
}
colVec
colVec=c("pop", "sex", "id", colVec)
colnames(snark)
colnames(snark)=colVec
head(snark)
boxplot(snark[,"bod_13"]~snark[,"sex"]+snark[,"pop"])
boxplot(snark[,"a_13"]~snark[,"sex"]+snark[,"pop"])
head(snark)
ind=c(1:nrow(snark))
snark2=cbind(snark[,1:3], ind, snark[4:length(snark)])
ind=c(1:nrow(snark))
snark=cbind(snark[,1:3], ind, snark[4:length(snark)])
colVec=c()
for(i in 1:5){
day=i*3-2
var1=paste("l_", day, sep="")
var2=paste("w_", day, sep="")
var3=paste("a_", day, sep="")
var4=paste("bod_", day, sep="")
colVec=c(colVec, var1, var2, var3, var4)
}
colVec
colVec=c("pop", "sex", "family", "id", colVec)
colnames(snark)
box.plot(l_1~pop + id, data=snark)
boxplot(snark[,"l_1"]~snark[,"pop"]+snark[,"id"])
snark=read.csv("snark.csv", as.is=T)
snark=read.csv("data_files/snark.csv", as.is=T)
head(snark)
snark=read.csv("./data_files/snark.csv", sep=",", header=T, strip.white=T)
str(snark)
unique(snark[,2])
snark[,"sex..f.0."]=tolower(snark[,"sex..f.0."])
#as.numeric(snark[,"sex..f.0."])
snark[which(snark[,2]=="f"),2]=0
snark[which(snark[,2]=="female"),2]=0
snark[which(snark[,2]=="m"),2]=1
snark[which(snark[,2]=="male"),2]=1
snark=read.csv("./data_files/snark.csv", sep=",", header=T, strip.white=T, as.is=T)
str(snark)
unique(snark[,2])
snark[,"sex..f.0."]=tolower(snark[,"sex..f.0."])
#as.numeric(snark[,"sex..f.0."])
snark[which(snark[,2]=="f"),2]=0
snark[which(snark[,2]=="female"),2]=0
snark[which(snark[,2]=="m"),2]=1
snark[which(snark[,2]=="male"),2]=1
#**Exercise 11: the Snarks need individual id numbers. Create an id column (hint, all you need is c() and a range), and add it to the dataset using data.frame()**
ind=c(1:nrow(snark))
snark=cbind(snark[,1:3], ind, snark[4:length(snark)])
#**Exercise 12: Use a for-loop, and the c() and paste() functions, to come up with a set of column labels. Change the column names of the dataset**
colVec=c()
for(i in 1:5){
day=i*3-2
var1=paste("l_", day, sep="")
var2=paste("w_", day, sep="")
var3=paste("a_", day, sep="")
var4=paste("bod_", day, sep="")
colVec=c(colVec, var1, var2, var3, var4)
}
colVec
colVec=c("pop", "sex", "family", "id", colVec)
colnames(snark)
colnames(snark)=colVec
summary=c()
for(i in 5:length(snark)){
maxVal=max(snark[,i], na.rm=T)
minVal=min(snark[,i], na.rm=T)
meanVal=mean(snark[,i], na.rm=T)
sumVec=c(maxVal, minVal, meanVal)
summary=cbind(summary, sumVec)
}
summary
boxplot((a_13/bod_13)~pop + sex, data=snark)
boxplot((a_13/bod_13)~sex+ pop, data=snark)
head(snark)
write.csv(snark, "snark.csv", quote=F, row.names=F)
head(snark)
write.csv(snark, "snark.csv", quote=F, row.names=F)
getwd()
```{r}
sexSize=lm(bod_1~sex, data=snark)
summary(sexSize)
```
head(snark)
abline(sexSize)
summary(sexSize)
plot(a_4~bod_4, data=snark)
abline(cephBod)
cephBod=lm(a_4~bod_4, data=snark)
summary(cephBod)
plot(a_4~bod_4, data=snark)
abline(cephBod)
plot(l_4~bod_4, data=snark)
cephBod=lm(l_4~bod_4, data=snark)
summary(cephBod)
plot(l_4~bod_4, data=snark)
abline(cephBod)
lMod=lm(l_7~sex+pop+family, data=snark)
summary(lMod)
wMod=lm(w_7~sex+pop+family, data=snark)
summary(wMod)
aMod=lm(a_7~sex+pop+family, data=snark)
summary(aMod)
bodMod=lm(bod_7~sex+pop+family, data=snark)
summary(bodMod)
?reshape
head(snark)
snarkLong=reshape(snark, varying=c(5:length(snark)), idvar="id", direction="long", timevar="day", sep="_")
head(snarkLong)
write.csv(snarkLong, "snarkLong.csv", row.names=F, quote=F)
write.csv(snarkLong, "./data_files/snarkLong.csv", row.names=F, quote=F)
snarkLong=read.csv("./data_files/snarkLong.csv", sep=",", header=T, as.is=T)
?ddply
?plyr
library(ddply)
library(plyr)
?ddply
sexSum=ddply(.snarkLong, .(sex, day), summarise,
N= length(bod)
aMean=mean(a)
aMax=max(a)
aMin=min(a)
aRat=mean(a)/mean(bod))
head(snarkLong
)
sexSum=ddply(.snarkLong, .(sex, day), summarise,
N= length(bod),
aMean=mean(a),
aMax=max(a),
aMin=min(a),
aRat=mean(a)/mean(bod))
sexSum=ddply(snarkLong, .(sex, day), summarise,
N= length(bod),
aMean=mean(a),
aMax=max(a),
aMin=min(a),
aRat=mean(a)/mean(bod))
sexSum
sexSum=ddply(.snarkLong, .(sex, day), summarise,
N= length(bod)
aMean=mean(a, na.rm=T)
aMax=max(a, na.rm=T)
aMin=min(a, na.rm=T)
aRat=mean(a, na.rm=T)/mean(bod, na.rm=T))
sexSum=ddply(.snarkLong, .(sex, day), summarise,
N= length(bod)
aMean=mean(a, na.rm=T)
aMax=max(a, na.rm=T)
aMin=min(a, na.rm=T)
aRat=mean(a, na.rm=T)/mean(bod, na.rm=T))
sexSum=ddply(snarkLong, .(sex, day), summarise,
N= length(bod)
aMean=mean(a, na.rm=T)
aMax=max(a, na.rm=T)
aMin=min(a, na.rm=T)
aRat=mean(a, na.rm=T)/mean(bod, na.rm=T))
sexSum=ddply(snarkLong, .(sex, day), summarise,
N= length(bod)
aMean=mean(a, na.rm=T)
aMax=max(a, na.rm=T)
aMin=min(a, na.rm=T)
aRat=mean(a, na.rm=T)/mean(bod, na.rm=T))
sexSum=ddply(snarkLong, .(sex, day), summarise,
N= length(bod),
aMean=mean(a, na.rm=T),
aMax=max(a, na.rm=T),
aMin=min(a, na.rm=T),
aRat=mean(a, na.rm=T)/mean(bod, na.rm=T))
sexSum
